server:
  port: 8010
spring:
  application:
    name: user-service
  datasource:
    driver-class-name: ${DB_DRIVER:org.postgresql.Driver}
    url: ${DB_URL:jdbc:postgresql://${USER_DB_HOST:ms_users_sql}:5432/users}
    username: ${DB_USERNAME:postgres}
    password: ${DB_PASSWORD:password}
  jpa:
    hibernate:
      ddl-auto: update
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_HOST:ms_kafka}:9092
    topic:
      notification-queue: notification-topic
    producer:
      bootstrap-server: ${KAFKA_BOOTSTRAP_HOST:ms_kafka}:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      observation-enabled: true
      properties:
        spring.json.type.mapping: notification:ru.kharevich.userservice.dto.other.Notification

  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: "http://${keycloak.domain}:8080/realms/${keycloak.realm}"

keycloak:
  domain: keycloak-ms
  clientId: client-api
  clientSecret: n0hYkJK00475ERn7nDfgSE9C69oQXYCe
  auth-url: http://${keycloak.domain}:8080
  realm: krainet-realm
  default-role: USER

eureka:
  client:
    service-url:
      defaultZone: http://ms-discovery:8761/eureka

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
  prometheus:
    metrics:
      export:
        enabled: true
  metrics:
    tags:
      application: user-service
  zipkin:
    tracing:
      endpoint: ${TEMPO_ZIPKIN_URL:http://tempo:9411/api/v2/spans}
  tracing:
    sampling:
      probability: 1.0