services:
  user-service:
    container_name: ms-user
    build:
      context: ../modules/user-service
      dockerfile: ../../docker/Dockerfile
      args:
        SERVICE_NAME: user-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      LOKI_URL: http://loki:3100
    restart: always
    ports:
      - "8010:8010"
    depends_on:
      - users_postgresql
      - kafka
      - keycloak
    networks:
      - microservices-net

  notification-service:
    container_name: ms-notification
    build:
      context: ../modules/notification-service
      dockerfile: ../../docker/Dockerfile
      args:
        SERVICE_NAME: notification-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      LOKI_URL: http://loki:3100
    restart: always
    ports:
      - "8020:8020"
    depends_on:
      - kafka
    networks:
      - microservices-net

  discovery-service:
    container_name: ms-discovery
    build:
      context: ../modules/discovery-service
      dockerfile: ../../docker/Dockerfile
      args:
        SERVICE_NAME: discovery-service
    environment:
      SPRING_PROFILES_ACTIVE: prod
      LOKI_URL: http://loki:3100
    restart: always
    ports:
      - "8761:8761"
    networks:
      - microservices-net

  users_postgresql:
    container_name: ms_users_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: users
    volumes:
      - users_psql:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - microservices-net
    restart: unless-stopped

  keycloak:
    container_name: keycloak-ms
    image: quay.io/keycloak/keycloak:26.1
    ports:
      - 8080:8080
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: postgre_keycloak
      KC_DB_URL_PORT: 5432
      KC_DB_URL_DATABASE: keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: password
    command:
      - "start-dev"
    depends_on:
      - postgre_keycloak
    networks:
      - microservices-net

  postgre_keycloak:
    container_name: keycloak_sql
    image: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: keycloak_db
      PGDATA: /data/postgres
    volumes:
      - postgres_keycloak:/data/postgres
    ports:
      - "5555:5432"
    restart: unless-stopped
    networks:
      - microservices-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.2.15
    container_name: zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - microservices-net

  kafka:
    container_name: ms_kafka
    image: confluentinc/cp-kafka:7.2.15
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://ms_kafka:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    networks:
      - microservices-net

  victoria-metrics:
    image: victoriametrics/victoria-metrics:latest
    container_name: victoria-metrics
    ports:
      - "8428:8428"
    volumes:
      - ../log-directory/victoria-metrics/promscrape.yml:/victoria-metrics/promscrape.yml
    networks:
      - microservices-net
    command:
      - '--promscrape.config=/victoria-metrics/promscrape.yml'
      - '--promscrape.config.strictParse=false'

  grafana:
    image: grafana/grafana:11.5.2
    container_name: grafana
    volumes:
      - ../log-directory/grafana:/var/lib/grafana
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"
    networks:
      - microservices-net

  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    volumes:
      - ../log-directory/loki:/etc/loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/loki-config.yml
    networks:
      - microservices-net

  tempo:
    container_name: tempo
    image: grafana/tempo:2.6.0
    command: [ "-config.file=/etc/tempo-config.yml" ]
    volumes:
      - ../log-directory/tempo/tempo-config.yml:/etc/tempo-config.yml
    ports:
      - "14268:14268"
      - "3200:3200"
      - "55680:55680"
      - "55681:55681"
      - "9411:9411"
      - "4318:4318"
      - "4317:4317"
    networks:
      - microservices-net

networks:
  microservices-net:
    driver: bridge
volumes:
  users_psql:
  postgres_keycloak: